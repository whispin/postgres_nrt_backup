version: '3.8'

services:
  postgres-backup:
    # 使用 GitHub Container Registry 镜像
    image: ghcr.io/whispin/postgres_nrt_backup:latest
    container_name: postgres-backup
    restart: unless-stopped
    
    environment:
      # PostgreSQL 连接配置
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      
      # pgBackRest 配置
      PGBACKREST_STANZA: main
      BACKUP_RETENTION_DAYS: 7
      BASE_BACKUP_SCHEDULE: "0 3 * * *"  # 每天凌晨3点
      
      # rclone 远程存储配置（可选）
      RCLONE_REMOTE_PATH: "postgres-backups"
      
      # 恢复模式（默认为 false）
      RECOVERY_MODE: "false"
    
    volumes:
      # PostgreSQL 数据目录（只读）
      - postgres_data:/var/lib/postgresql/data:ro
      
      # 本地备份存储
      - ./backups:/backup/local
      
      # 日志目录
      - ./logs:/backup/logs
      
      # rclone 配置（如果使用远程存储）
      - ./rclone.conf:/root/.config/rclone/rclone.conf:ro
    
    depends_on:
      - postgres
    
    networks:
      - postgres_network

  postgres:
    image: postgres:17.5-alpine
    container_name: postgres
    restart: unless-stopped
    
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    ports:
      - "5432:5432"
    
    networks:
      - postgres_network

volumes:
  postgres_data:

networks:
  postgres_network:
    driver: bridge

# 使用说明：
# 1. 替换 'your-username' 为您的 GitHub 用户名
# 2. 根据需要调整环境变量
# 3. 如果使用远程存储，配置 rclone.conf 文件
# 4. 运行: docker-compose -f docker-compose.ghcr.yml up -d
